<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbk.dao.ModuleMapper">
  <resultMap id="BaseResultMap" type="com.kbk.model.Module">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="module_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_node_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="updated_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="created_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, module_name, parent_node_id, url, created_time, updated_time, created_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from module
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from module
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kbk.model.Module">
    insert into module (id, module_name, parent_node_id, 
      url, created_time, updated_time, 
      created_by)
    values (#{id,jdbcType=BIGINT}, #{moduleName,jdbcType=VARCHAR}, #{parentNodeId,jdbcType=BIGINT}, 
      #{url,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT}, 
      #{createdBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kbk.model.Module">
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="parentNodeId != null">
        parent_node_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeId != null">
        #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kbk.model.Module">
    update module
    <set>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeId != null">
        parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kbk.model.Module">
    update module
    set module_name = #{moduleName,jdbcType=VARCHAR},
      parent_node_id = #{parentNodeId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT},
      updated_time = #{updatedTime,jdbcType=BIGINT},
      created_by = #{createdBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>